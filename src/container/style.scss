// container element
.tv-container {
  // containers should be relative to each other
  position: relative;
  min-width: 0; // this fixes a lot of flex / grid issues
  min-height: 0; // this fixes a lot of flex / grid issues
}

// resizable content
.tv-container.tv-resizable {
  // resizable handle
  > .tv-resizable-handle {
    position: absolute;
    z-index: 1;
    opacity: 0;
    background-color: transparent;

    &:hover {
      opacity: 1;
    }
  }

  // resizable handle state while resizing
  &.tv-resizable-resizing > .tv-resizable-handle {
    opacity: 1;
  }

  // horizontal handle
  &.tv-resizable-left,
  &.tv-resizable-right {
    > .tv-resizable-handle {
    top: 0;
    bottom: 0;
    width: 1px;
    height: auto;
    cursor: ew-resize;
    }
  }

  &.tv-resizable-left {
    > .tv-resizable-handle {
    left: 0;
    border-left: 3px solid var(--bg-darkest);
    }
  }

  &.tv-resizable-right {
    > .tv-resizable-handle {
    right: 0;
    border-right: 3px solid var(--bg-darkest);
    }
  }

  // vertical handle
  &.tv-resizable-top,
  &.tv-resizable-bottom {
    > .tv-resizable-handle {
        left: 0;
        right: 0;
        width: auto;
        height: 1px;
        cursor: ns-resize;
    }
  }

  &.tv-resizable-top {
    > .tv-resizable-handle {
      top: 0;
      border-top: 3px solid var(--bg-darkest);
    }
  }

  &.tv-resizable-bottom {
    > .tv-resizable-handle {
      bottom: 0;
      border-bottom: 3px solid var(--bg-darkest);
    }
  }
}

.tv-container-dragged {
  outline: 2px solid var(--text-primary);
  box-sizing: border-box;
  opacity: 0.7;
  z-index: 1;
}

.tv-container-dragged-child {
  outline: 1px dotted var(--text-active);
  box-sizing: border-box;
}